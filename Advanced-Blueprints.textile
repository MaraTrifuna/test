h5. This is the documentation for Titan 0.4. <br> Documentation for the latest Titan version is available at "http://s3.thinkaurelius.com/docs/titan/current":http://s3.thinkaurelius.com/docs/titan/current.

[[https://raw.github.com/tinkerpop/blueprints/master/doc/images/blueprints-character-3.png|width=100px]]

"Blueprints":http://blueprints.tinkerpop.com provides a set of common property graph interfaces by which any vendor can implement and leverage the "TinkerPop":http://tinkerpop.com stack of technologies. Within Blueprints, there are other utilities that are generally useful like import/export formats as well graph wrappers.

h2. Using IdGraph

It is possible to use Blueprints' "IdGraph":https://github.com/tinkerpop/blueprints/wiki/Id-Implementation with Titan. However, it is best to prepare Titan for IdGraph by declaring the @__id@ index using @TitanGraph.makeType()@, and furthermore, it is _necessary_ if you intend to use IdGraph for user-specified ids on _both_ vertices and edges.  Use the appropriate data type (e.g. @String.class@ for the ids you intend to use):

```text
gremlin> g = TitanFactory.open("/tmp/test")
==>titangraph[local:/tmp/test]
gremlin> g.makeKey(IdGraph.ID).single().unique().indexed(Vertex.class).indexed(Edge.class).dataType(String.class).make()
==>__id
gremlin> ig = new IdGraph(g)
==>idgraph[titangraph[local:/tmp/test]]
gremlin> hercules = ig.addVertex("hercules")
==>v[hercules]
gremlin> g.v("hercules")
==>null
gremlin> zeus = ig.addVertex("zeus")
==>v[zeus]
gremlin> ig.addEdge("hercules-father", hercules, zeus, "father");
==>e[hercules-father][hercules-father->zeus]
```

If only user defined ids on vertices (or edges) is needed, then use one of the overloaded @IdGraph@ constructors.  It is still helpful, although not strictly necessary, to define an index:

```text
gremlin> g = TitanFactory.open("/tmp/test")
==>titangraph[local:/tmp/test]
gremlin> g.makeKey(IdGraph.ID).single().unique().indexed(Vertex.class).dataType(String.class).make()
==>__id
gremlin> ig = new IdGraph(g, true, false)  // true for vertices, false for edges
==>idgraph[titangraph[local:/tmp/test]]
gremlin> hercules = ig.addVertex("hercules")
==>v[hercules]
gremlin> g.v("hercules")
==>null
gremlin> zeus = ig.addVertex("zeus")
==>v[zeus]
gremlin> ig.addEdge("hercules-father", hercules, zeus, "father");
==>e[11-4-1o][hercules-father->zeus]
```