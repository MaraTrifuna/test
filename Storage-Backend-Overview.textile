Titan persists all data in a storage backend. Titan supports various storage backends which are configured using the @storage.backend@ option. The choice of backend determines the transactional guarantees and scalability of a particular Titan graph instance. This means, that Titan can accomodate any level of isolation, consistency, scalability, or availability that a particular application may require by choosing the appropriate storage backend.

However, the "CAP theorem":http://en.wikipedia.org/wiki/CAP_theorem stipulates that any practical database can only provide 2 of the 3 desirable properties: Consistency, Availability, and Partitionability (i.e. scalability). The choice of storage backend is therefore a tradeoff guided by the requirements of a particular use case.

Titan currently supports 3 storage backends covering all 3 edges of the CAP theorem triangle as shown in the figure below.

[[https://github.com/thinkaurelius/titan/raw/master/doc/images/titan-captheorem.png|align=center]]
<br>

h2. Storage Backend Comparison

|_. Name |_. @storage.option@ |_. Consistency |_. Availability |_. Scalability |_. Replication |
| [[Cassandra|Using Cassandra]] | _cassandra_ | eventually consistent | highly available | linear scalability | yes |
| [[HBase|Using HBase]] | _hbase_ | vertex consistent | single point of failure | linear scalability | yes |
| [[BerkeleyDB|Using BerkeleyDB]] | _berkeleyje_ | "ACID":http://en.wikipedia.org/wiki/ACID | single point of failure | single machine | HA mode available |
